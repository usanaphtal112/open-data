# Generated by Django 5.1.5 on 2025-02-09 17:18

import django.core.validators
import django.db.models.deletion
import healthdata.models
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="HealthFacility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "facility_id",
                    models.CharField(
                        max_length=10,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^RW\\d{5}$",
                                "Facility ID must be RW followed by 5 digits",
                            )
                        ],
                    ),
                ),
                ("facility_name", models.CharField(max_length=255)),
                (
                    "facility_type",
                    models.CharField(
                        choices=[
                            ("HOSPITAL", "Hospital"),
                            ("SPECIALIZED_HOSPITAL", "Specialized Hospital"),
                            ("CLINIC", "Clinic"),
                            ("DENTIST", "Dentist"),
                            ("PHARMACY", "Pharmacy"),
                            ("HEALTH_CENTER", "Health Center"),
                            ("HEALTH_POST", "Health Post"),
                            ("DISPENSARY", "Dispensary"),
                            ("MEDICAL_PRACTICE", "Medical Practice"),
                            ("MEDICAL_CLINIC", "Medical Clinic"),
                            ("SPECIALIZED_CLINIC", "Specialized Clinic"),
                            ("POLYCLINIC", "Polyclinic"),
                            ("BIOMEDICAL_LABORATORY", "Biomedical Laboratory"),
                            ("ANTENATAL_CLINIC", "Antenatal Clinic"),
                            ("NURSING_HOME", "Nursing Home"),
                            ("PHYSIO_THERAPY_CENTER", "Physio-Therapy Center"),
                            ("DENTAL_CLINIC", "Dental Clinic"),
                            ("OPHTHALMIC_CLINIC", "Opthalmic Clinic"),
                            ("OPTOMETRIC_CLINIC", "Optometric Clinic"),
                            ("OPHTHALMIC_SURGERY", "Opthalmic Surgery"),
                            ("MEDICAL_IMMAGING_CENTER", "Medical Imaging Center"),
                            ("HEALTH_AGENCY", "Health Agency"),
                            ("HEALTH_TRAINING_CENTER", "Health Training Center"),
                            ("HEALTH_CONSULTATION", "Health Consultation"),
                            ("HEALTH_SCREENING", "Health Screening"),
                            ("OTHER", "Other"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PROVINCIAL_REFERRAL", "Province Hospital"),
                            ("DISTRICT_REFERRAL", "District Referral"),
                            ("REFERRAL", "Referral"),
                            ("DISTRICT", "District"),
                            ("COMMUNITY", "Community"),
                            ("OTHER", "Other"),
                        ],
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "ownership",
                    models.CharField(
                        choices=[
                            ("GOVERNMENT", "Government"),
                            ("PRIVATE", "Private"),
                            ("FAITH_BASED", "Faith-Based Organization"),
                            ("NGO", "Non-Governmental Organization"),
                            ("CHURCH", "Church"),
                            ("OTHER", "Other"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(5),
                            django.core.validators.MinValueValidator(1),
                        ],
                    ),
                ),
                (
                    "average_rating",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=3, null=True
                    ),
                ),
                ("review_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="GovernmentData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("registration_date", models.DateField()),
                ("government_support", models.BooleanField(default=False)),
                ("inspection_records", models.JSONField(default=list)),
                ("funding_allocation", models.JSONField(default=dict)),
                (
                    "facility",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="government_data",
                        to="healthdata.healthfacility",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FacilityResources",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("beds", models.PositiveIntegerField(default=0)),
                ("laboratories", models.JSONField(default=dict)),
                ("diagnostic_services", models.JSONField(default=list)),
                ("ict_equipment", models.JSONField(default=dict)),
                ("pharmacy", models.JSONField(default=dict)),
                ("special_needs_support", models.BooleanField(default=False)),
                (
                    "facility",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resources",
                        to="healthdata.healthfacility",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FacilityImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to=healthdata.models.FacilityImage.facility_image_path
                    ),
                ),
                ("caption", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "image_type",
                    models.CharField(
                        choices=[
                            ("EXTERIOR", "Exterior"),
                            ("INTERIOR", "Interior"),
                            ("FACILITY", "Facility"),
                            ("OTHER", "Other"),
                        ],
                        default="OTHER",
                        max_length=30,
                    ),
                ),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "facility",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="healthdata.healthfacility",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FacilityFees",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "consultation_fee",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("additional_costs", models.JSONField(default=dict)),
                ("insurance_accepted", models.BooleanField(default=False)),
                ("insurance_providers", models.JSONField(default=list)),
                (
                    "facility",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fees",
                        to="healthdata.healthfacility",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ContactInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("phone", models.CharField(max_length=15)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("website", models.URLField(blank=True, null=True)),
                ("social_media", models.JSONField(default=dict)),
                (
                    "facility",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contact_info",
                        to="healthdata.healthfacility",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AdvancedFacilityData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nearby_facilities", models.JSONField(default=list)),
                ("events", models.JSONField(default=list)),
                ("partnerships", models.JSONField(default=list)),
                (
                    "facility",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="advanced_data",
                        to="healthdata.healthfacility",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HealthFacilityLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("address", models.CharField(max_length=255)),
                ("province", models.CharField(max_length=50)),
                ("district", models.CharField(max_length=50)),
                ("sector", models.CharField(blank=True, max_length=50, null=True)),
                ("cell", models.CharField(blank=True, max_length=50, null=True)),
                ("village", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "latitude",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-90),
                            django.core.validators.MaxValueValidator(90),
                        ],
                    ),
                ),
                (
                    "longitude",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-180),
                            django.core.validators.MaxValueValidator(180),
                        ],
                    ),
                ),
                (
                    "facility",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location",
                        to="healthdata.healthfacility",
                    ),
                ),
            ],
            options={
                "verbose_name": "Facility Location",
            },
        ),
        migrations.CreateModel(
            name="HealthFacilityServices",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("special_programs", models.JSONField(default=list)),
                ("performance_metrics", models.JSONField(default=dict)),
                (
                    "accreditation_status",
                    models.CharField(
                        choices=[
                            ("ACCREDITED", "Accredited"),
                            ("PENDING", "Pending"),
                            ("EXPIRED", "Expired"),
                            ("REVOKED", "Revoked"),
                            ("OTHER", "Other"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "operating_hours",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                ("emergency_services", models.BooleanField(default=True)),
                (
                    "languages_spoken",
                    models.JSONField(blank=True, default=list, null=True),
                ),
                (
                    "facility",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="services",
                        to="healthdata.healthfacility",
                    ),
                ),
                ("offered_services", models.ManyToManyField(to="healthdata.service")),
            ],
        ),
        migrations.CreateModel(
            name="HealthFacilityPopulation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.PositiveIntegerField()),
                ("total_patients", models.PositiveIntegerField()),
                ("male_patients", models.PositiveIntegerField()),
                ("female_patients", models.PositiveIntegerField()),
                ("total_staff", models.PositiveIntegerField()),
                ("doctors", models.PositiveIntegerField()),
                ("nurses", models.PositiveIntegerField()),
                ("other_staff", models.PositiveIntegerField()),
                (
                    "facility",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="population_stats",
                        to="healthdata.healthfacility",
                    ),
                ),
            ],
            options={
                "unique_together": {("facility", "year")},
            },
        ),
    ]
